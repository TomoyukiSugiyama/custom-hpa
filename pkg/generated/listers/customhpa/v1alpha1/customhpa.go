/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "custom-hpa/pkg/apis/customhpa/v1alpha1"

	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CustomHPALister helps list CustomHPAs.
// All objects returned here must be treated as read-only.
type CustomHPALister interface {
	// List lists all CustomHPAs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomHPA, err error)
	// CustomHPAs returns an object that can list and get CustomHPAs.
	CustomHPAs(namespace string) CustomHPANamespaceLister
	CustomHPAListerExpansion
}

// customHPALister implements the CustomHPALister interface.
type customHPALister struct {
	indexer cache.Indexer
}

// NewCustomHPALister returns a new CustomHPALister.
func NewCustomHPALister(indexer cache.Indexer) CustomHPALister {
	return &customHPALister{indexer: indexer}
}

// List lists all CustomHPAs in the indexer.
func (s *customHPALister) List(selector labels.Selector) (ret []*v1alpha1.CustomHPA, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomHPA))
	})
	return ret, err
}

// CustomHPAs returns an object that can list and get CustomHPAs.
func (s *customHPALister) CustomHPAs(namespace string) CustomHPANamespaceLister {
	return customHPANamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CustomHPANamespaceLister helps list and get CustomHPAs.
// All objects returned here must be treated as read-only.
type CustomHPANamespaceLister interface {
	// List lists all CustomHPAs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CustomHPA, err error)
	// Get retrieves the CustomHPA from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CustomHPA, error)
	CustomHPANamespaceListerExpansion
}

// customHPANamespaceLister implements the CustomHPANamespaceLister
// interface.
type customHPANamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CustomHPAs in the indexer for a given namespace.
func (s customHPANamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CustomHPA, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CustomHPA))
	})
	return ret, err
}

// Get retrieves the CustomHPA from the indexer for a given namespace and name.
func (s customHPANamespaceLister) Get(name string) (*v1alpha1.CustomHPA, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("customhpa"), name)
	}
	return obj.(*v1alpha1.CustomHPA), nil
}
